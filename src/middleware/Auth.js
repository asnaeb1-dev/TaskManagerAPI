const jwt = require('jsonwebtoken')
const User = require('./../models/UserModel')

//what is exactly happenning here?

/*  -------------------STEP 1--------------------
    here we recieve the token supplied during sign up and use the SECRET KEY to 
    verify that it was indeed generated by this instance of the server.

    -------------------STEP 2:-------------------
    Now, we must remeber we have to pass a unique value into jwt.sign() so that the user can be uniquely identified.
    So using jwt.verify() we have decoded the token and now we will check if the user actually exists in the database by using the unique identifier(_id here)

    --------------------STEP 3:------------------
    Now that we have found the user having similar identifier we must check the tokens array for the token provided to be sure
*/
const auth = async function(request, response, next){
    try{
        //get the token out of the header and parse the token and cut out the 'Bearer ' part
        const token = request.header('Authorization').replace('Bearer ', '');
        const decoded = jwt.verify(token, process.env.SECRET);
        const user = await User.findOne({ _id: decoded._id, 'tokens.token': token})

        if(!user){
            throw new Error()
        }
        //the line of code below helps by storing the user details so that the route handler has access to the user and doesnt have to access it later
        request.user = user;
        request.token = token;
        next();
    }catch (e){
        response.status(401).send({error:"please authenticate"})
    }
}

module.exports = auth;